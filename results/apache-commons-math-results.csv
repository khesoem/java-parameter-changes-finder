10e38114032cb4c585b29e946e1d70e05d52a878, src/main/java/org/apache/commons/math4/stat/inference/InferenceTestUtils.java, public monteCarloP(double, int, int, boolean, int) : double, public monteCarloP(double, int, int, boolean, int, UniformRandomProvider) : double
10e38114032cb4c585b29e946e1d70e05d52a878, src/main/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTest.java, private integralMonteCarloP(long, int, int, int) : double, private integralMonteCarloP(long, int, int, int, UniformRandomProvider) : double
10e38114032cb4c585b29e946e1d70e05d52a878, src/main/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTest.java, public bootstrap(double[], double[], int, boolean) : double, public bootstrap(double[], double[], int, boolean, UniformRandomProvider) : double
10e38114032cb4c585b29e946e1d70e05d52a878, src/main/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTest.java, public monteCarloP(double, int, int, boolean, int) : double, public monteCarloP(double, int, int, boolean, int, UniformRandomProvider) : double
3066a8085f86b743da14a161427c403a7038e8b0, src/main/java/org/apache/commons/math4/distribution/AbstractMultivariateRealDistribution.java, public sample(int) : double[][], public sample(int, MultivariateRealDistribution.Sampler) : double[][]
ae2c81ad18f82278c5840d12ac22e572c3d31bf3, src/main/java/org/apache/commons/math4/distribution/AbstractIntegerDistribution.java, public sample(int) : int[], public sample(int, IntegerDistribution.Sampler) : int[]
82cf2774a215ae46477e4b35decf77321e20ab34, src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractAdamsFieldIntegratorTest.java, protected doExceedMaxEvaluations(Field) : void, protected doExceedMaxEvaluations(Field, int) : void
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/EulerFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/GillFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/LutherFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
771eb6a606491375a61fee1aa537025edafacc34, src/main/java/org/apache/commons/math4/ode/sampling/AbstractFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
d6a8ed57b8e1fdeaa3b6bb4360b6de0d66dc6450, src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractRungeKuttaFieldStepInterpolatorTest.java, private convertInterpolator(RungeKuttaFieldStepInterpolator) : RungeKuttaStepInterpolator, private convertInterpolator(RungeKuttaFieldStepInterpolator, FieldFirstOrderDifferentialEquations) : RungeKuttaStepInterpolator
df1ce13f978983b55935985887030082fb5f7a51, src/test/java/org/apache/commons/math3/ode/nonstiff/AbstractAdamsFieldIntegratorTest.java, protected doExceedMaxEvaluations(Field) : void, protected doExceedMaxEvaluations(Field, int) : void
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/EulerFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/GillFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54FieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/LutherFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
56eb5b584f9c61ba38cde8ad3e97ff031f7f5820, src/main/java/org/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator.java, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T) : FieldODEStateAndDerivative, protected computeInterpolatedStateAndDerivatives(FieldEquationsMapper, T, T, T, T) : FieldODEStateAndDerivative
a3d10998f03bbdaaf4e63e98591f76b8f64fb793, src/test/java/org/apache/commons/math3/ode/nonstiff/AbstractRungeKuttaFieldStepInterpolatorTest.java, private convertInterpolator(RungeKuttaFieldStepInterpolator) : RungeKuttaStepInterpolator, private convertInterpolator(RungeKuttaFieldStepInterpolator, FieldFirstOrderDifferentialEquations) : RungeKuttaStepInterpolator
321fd029ec5c9c3c9717f1ede0add49d8a709a01, src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,  LocalLeastSquaresProblem(MultivariateJacobianFunction, RealVector, RealVector, ConvergenceChecker, int, int, boolean) : void,  LocalLeastSquaresProblem(MultivariateJacobianFunction, RealVector, RealVector, ConvergenceChecker, int, int, boolean, ParameterValidator) : void
b95cfc9b579e91a456847b2369295dfae7da8bc6, src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java, public LineSearch(MultivariateOptimizer, double, double) : void, public LineSearch(MultivariateOptimizer, double, double, double) : void
b95cfc9b579e91a456847b2369295dfae7da8bc6, src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java, public NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker, double, double) : void, public NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker, double, double, double) : void
8916830e8a2d551b87ed64559246621d439a8694, src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java, public model(MultivariateVectorFunction) : LeastSquaresBuilder, public model(MultivariateVectorFunction, MultivariateMatrixFunction) : LeastSquaresBuilder
8b697afded6133210249f943c220756951b64cbc, src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java, private determineLMDirection(double[], double[], double[], InternalData, int, double[]) : void, private determineLMDirection(double[], double[], double[], InternalData, int, double[], double[]) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testGetIterations() : void, public testGetIterations(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testMoreEstimatedParametersUnsorted() : void, public testMoreEstimatedParametersUnsorted(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testOneSet() : void, public testOneSet(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testRedundantEquations() : void, public testRedundantEquations(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testMoreEstimatedParametersSimple() : void, public testMoreEstimatedParametersSimple(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testCircleFittingBadInit() : void, public testCircleFittingBadInit(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testInconsistentSizes1() : void, public testInconsistentSizes1(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testInconsistentSizes2() : void, public testInconsistentSizes2(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testNonInvertible() : void, public testNonInvertible(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testIllConditioned() : void, public testIllConditioned(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testKirby2() : void, public testKirby2(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testTwoSets() : void, public testTwoSets(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testHahn1() : void, public testHahn1(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testCircleFittingGoodInit() : void, public testCircleFittingGoodInit(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testQRColumnsPermutation() : void, public testQRColumnsPermutation(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testCircleFitting() : void, public testCircleFitting(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testNoDependency() : void, public testNoDependency(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testTrivial() : void, public testTrivial(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java, public testInconsistentEquations() : void, public testInconsistentEquations(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java, public testMoreEstimatedParametersUnsorted() : void, public testMoreEstimatedParametersUnsorted(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java, public testCircleFittingBadInit() : void, public testCircleFittingBadInit(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java, public testMaxEvaluations() : void, public testMaxEvaluations(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java, public testMoreEstimatedParametersSimple() : void, public testMoreEstimatedParametersSimple(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java, public testHahn1() : void, public testHahn1(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java, public testBevington() : void, public testBevington(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java, public testCircleFitting2() : void, public testCircleFitting2(LeastSquaresOptimizer) : void
7460c082a39251193108da52ce05e63f3e3796d1, src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java, public testNonInvertible() : void, public testNonInvertible(LeastSquaresOptimizer) : void
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristicTest.java, protected createConvexHullGenerator() : ConvexHullGenerator2D, protected createConvexHullGenerator(boolean) : ConvexHullGenerator2D
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java, protected checkPointsInsideHullRegion(Collection, ConvexHull2D) : void, protected checkPointsInsideHullRegion(Collection, ConvexHull2D, boolean) : void
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java, protected isConvex(ConvexHull2D) : boolean, protected isConvex(ConvexHull2D, boolean) : boolean
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java, protected createConvexHullGenerator() : ConvexHullGenerator2D, protected createConvexHullGenerator(boolean) : ConvexHullGenerator2D
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/GrahamScanTest.java, protected createConvexHullGenerator() : ConvexHullGenerator2D, protected createConvexHullGenerator(boolean) : ConvexHullGenerator2D
e5dc3ad337f2e6650b7422dd7584a072974b1270, src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChainTest.java, protected createConvexHullGenerator() : ConvexHullGenerator2D, protected createConvexHullGenerator(boolean) : ConvexHullGenerator2D
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java, public IntervalsSet(double, double) : void, public IntervalsSet(double, double, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java, public IntervalsSet(BSPTree) : void, public IntervalsSet(BSPTree, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java, public IntervalsSet() : void, public IntervalsSet(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java, private buildTree(double, double) : BSPTree, private buildTree(double, double, double) : BSPTree
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java, public IntervalsSet(Collection) : void, public IntervalsSet(Collection, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java, public OrientedPoint(Vector1D, boolean) : void, public OrientedPoint(Vector1D, boolean, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java, public Line(Vector3D, Vector3D) : void, public Line(Vector3D, Vector3D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java, public BoundaryProjector() : void, public BoundaryProjector(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java, public Plane(Vector3D, Vector3D) : void, public Plane(Vector3D, Vector3D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java, public Plane(Vector3D) : void, public Plane(Vector3D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java, public Plane(Vector3D, Vector3D, Vector3D) : void, public Plane(Vector3D, Vector3D, Vector3D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java, public PolyhedronsSet(Collection) : void, public PolyhedronsSet(Collection, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java, private buildBoundary(double, double, double, double, double, double) : BSPTree, private buildBoundary(double, double, double, double, double, double, double) : BSPTree
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java, public PolyhedronsSet() : void, public PolyhedronsSet(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java, public PolyhedronsSet(double, double, double, double, double, double) : void, public PolyhedronsSet(double, double, double, double, double, double, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java, public PolyhedronsSet(BSPTree) : void, public PolyhedronsSet(BSPTree, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java, private buildIntervalSet(Vector3D, Vector3D) : IntervalsSet, private buildIntervalSet(Vector3D, Vector3D, double) : IntervalsSet
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java, public SubLine(Vector3D, Vector3D) : void, public SubLine(Vector3D, Vector3D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java, public Line(Vector2D, Vector2D) : void, public Line(Vector2D, Vector2D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java, private Line(double, double, double, double) : void, private Line(double, double, double, double, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java, public Line(Vector2D, double) : void, public Line(Vector2D, double, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java, public NestedLoops() : void, public NestedLoops(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java, private NestedLoops(Vector2D[]) : void, private NestedLoops(Vector2D[], double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java, public PolygonsSet() : void, public PolygonsSet(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java, private boxBoundary(double, double, double, double) : Line[], private boxBoundary(double, double, double, double, double) : Line[]
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java, public PolygonsSet(BSPTree) : void, public PolygonsSet(BSPTree, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java, public PolygonsSet(Collection) : void, public PolygonsSet(Collection, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java, public PolygonsSet(double, double, double, double) : void, public PolygonsSet(double, double, double, double, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java, public SubLine(Vector2D, Vector2D) : void, public SubLine(Vector2D, Vector2D, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java, private buildIntervalSet(Vector2D, Vector2D) : IntervalsSet, private buildIntervalSet(Vector2D, Vector2D, double) : IntervalsSet
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java, public AbstractRegion(Hyperplane[]) : void, public AbstractRegion(Hyperplane[], double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java, protected AbstractRegion(Collection) : void, protected AbstractRegion(Collection, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java, protected AbstractRegion() : void, protected AbstractRegion(double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java, protected AbstractRegion(BSPTree) : void, protected AbstractRegion(BSPTree, double) : void
2a671338058e46b26a951ba01246b33a67d0eff4, src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java, public getCell(Point) : BSPTree, public getCell(Point, double) : BSPTree
d83cdb913332b02fd310f5cdf3df045162c4cc54, src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java, public Arc(double, double) : void, public Arc(double, double, double) : void
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java, public ArcsSet(Collection) : void, public ArcsSet(Collection, double) : void
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java, public ArcsSet(double, double) : void, public ArcsSet(double, double, double) : void
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java, private buildTree(double, double) : BSPTree, private buildTree(double, double, double) : BSPTree
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java, public ArcsSet(BSPTree) : void, public ArcsSet(BSPTree, double) : void
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java, public ArcsSet() : void, public ArcsSet(double) : void
a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0, src/main/java/org/apache/commons/math3/geometry/spherical/oned/Chord.java, public Chord(double, double) : void, public Chord(double, double, double) : void
5151780b34e9f68c3d37f3e95b99568c76549358, src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java, private lexNorm(int[]) : long, private lexNorm(int[], int) : long
f4bc191c4d4de04246c2e4293f3eb5b1ed791661, src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java, private stage(int) : double, private stage(int, double) : double
feda07b7e5b1e9cb427cd4e1749619ab7beb494a, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java, public angle(FieldVector3D) : T, public angle(FieldVector3D, Vector3D) : T
feda07b7e5b1e9cb427cd4e1749619ab7beb494a, src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java, public angle(FieldVector3D) : T, public angle(FieldVector3D, FieldVector3D) : T
ca08d0e8b13b8aaafc39d71de57340dc5f49f015, src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java, private qrDecomposition() : void, private qrDecomposition(RealMatrix) : void
ef6887f87037cce8f72c6beb233cca8b9b959ff8, src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java, private initializeMatrix() : void, private initializeMatrix(boolean) : void
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, public transform(double[]) : double[], public transform(double[], TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, public transform(UnivariateFunction, double, double, int) : double[], public transform(UnivariateFunction, double, double, int, TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, public transform(UnivariateFunction, double, double, int) : double[], public transform(UnivariateFunction, double, double, int, TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, public transform(double[]) : double[], public transform(double[], TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, public transform(double[]) : double[], public transform(double[], TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, public transform(UnivariateFunction, double, double, int) : double[], public transform(UnivariateFunction, double, double, int, TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/RealTransformer.java, public transform(UnivariateFunction, double, double, int) : double[], public transform(UnivariateFunction, double, double, int, TransformType) : double[]
fb761ffb51ba1436163b094255b6af40bf69bd83, src/main/java/org/apache/commons/math/transform/RealTransformer.java, public transform(double[]) : double[], public transform(double[], TransformType) : double[]
dee1c0d70b774902bbfab9f5eb05e5d77066a8be, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, public transform(Complex[]) : Complex[], public transform(Complex[], TransformType) : Complex[]
dee1c0d70b774902bbfab9f5eb05e5d77066a8be, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, public transform(double[]) : Complex[], public transform(double[], TransformType) : Complex[]
dee1c0d70b774902bbfab9f5eb05e5d77066a8be, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, public transform(UnivariateFunction, double, double, int) : Complex[], public transform(UnivariateFunction, double, double, int, TransformType) : Complex[]
7319e333d6e0483b25756fd9a89d413594b07e21, src/main/java/org/apache/commons/math/linear/ConjugateGradient.java, public ConjugateGradientEvent(Object, int, RealVector, RealVector, RealVector) : void, public ConjugateGradientEvent(Object, int, RealVector, RealVector, RealVector, double) : void
908d8adc984ef0895f16b2f060594e72bdea6f25, src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java, public IterativeLinearSolverEvent(Object) : void, public IterativeLinearSolverEvent(Object, int) : void
908d8adc984ef0895f16b2f060594e72bdea6f25, src/main/java/org/apache/commons/math/util/IterationEvent.java, public IterationEvent(Object) : void, public IterationEvent(Object, int) : void
9424a28a3059443b86b25c490497cff910107aa6, src/main/java/org/apache/commons/math/random/ISAACRandom.java, private setState() : void, private setState(int) : void
d61dba0cf68a1400e55d0dcab7e55f6de16ae74a, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, private Solver(double[][], double[]) : void, private Solver(double[][], double[], double) : void
f4f2b6370281c94b0707b58581ba0102ecd9ae27, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, public FastCosineTransformer() : void, public FastCosineTransformer(boolean) : void
2dbc66e4fdcfa51cea40f74db6e97b37a247a815, src/main/java/org/apache/commons/math/exception/ZeroException.java, public ZeroException(Localizable) : void, public ZeroException(Localizable, Object) : void
c5f349b12a6800dc1664317024269596e8b0305f, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, public LegendreGaussIntegrator(int, int) : void, public LegendreGaussIntegrator(int, int, int) : void
c5f349b12a6800dc1664317024269596e8b0305f, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, protected UnivariateRealIntegratorImpl(int) : void, protected UnivariateRealIntegratorImpl(int, int) : void
2dc556649e6c3bd545a73999e3bd8666c79c6d16, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, private Solver(double[], RealMatrix, RealMatrix, boolean) : void, private Solver(double[], RealMatrix, RealMatrix, boolean, double) : void
d451a1fb921f7dec1bde47a05a37fbed4df5a1ba, src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java, public BOBYQAOptimizer() : void, public BOBYQAOptimizer(int) : void
7629512cbcc22d3d6dbe47d08195ca861f5b29ce, src/main/java/org/apache/commons/math/ode/events/EventState.java, public EventState(EventHandler, double, double, int) : void, public EventState(EventHandler, double, double, int, UnivariateRealSolver) : void
7629512cbcc22d3d6dbe47d08195ca861f5b29ce, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, public addEventHandler(EventHandler, double, double, int) : void, public addEventHandler(EventHandler, double, double, int, UnivariateRealSolver) : void
556576e645e124337afc4814f2f3ed9853da1cb6, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, public NordsieckInitializer(int) : void, public NordsieckInitializer(int, int) : void
da462abca016b80ce42e4cb3523e3eb3522a559f, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, public NullArgumentException(Localizable) : void, public NullArgumentException(Localizable, Object) : void
0615bf8dc027bc72f1bda3395a640f5bd96b99a1, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, public MaxCountExceededException(Localizable, Number) : void, public MaxCountExceededException(Localizable, Number, Object) : void
d60ad04b6d1e1e344773f9ff9cdd27d740fa2242, src/main/java/org/apache/commons/math/exception/MathUserException.java, public MathUserException(Throwable) : void, public MathUserException(Throwable, Object) : void
44f6b8b20f0ed5bf1965ef575b9ad30bd4f8b256, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, public converged(int, PAIR) : boolean, public converged(int, PAIR, PAIR) : boolean
44f6b8b20f0ed5bf1965ef575b9ad30bd4f8b256, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, public converged(int, RealPointValuePair) : boolean, public converged(int, RealPointValuePair, RealPointValuePair) : boolean
44f6b8b20f0ed5bf1965ef575b9ad30bd4f8b256, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, public converged(int, RealPointValuePair) : boolean, public converged(int, RealPointValuePair, RealPointValuePair) : boolean
44f6b8b20f0ed5bf1965ef575b9ad30bd4f8b256, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, public converged(int, VectorialPointValuePair) : boolean, public converged(int, VectorialPointValuePair, VectorialPointValuePair) : boolean
44f6b8b20f0ed5bf1965ef575b9ad30bd4f8b256, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, public converged(int, VectorialPointValuePair) : boolean, public converged(int, VectorialPointValuePair, VectorialPointValuePair) : boolean
d402f6b5e1016bfbd4a36b46a06b3caa73c67880, src/main/java/org/apache/commons/math/optimization/general/PowellOptimizer.java, public LineSearch(double) : void, public LineSearch(double, double) : void
d402f6b5e1016bfbd4a36b46a06b3caa73c67880, src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java, private doTest(MultivariateRealFunction, double[], double[], GoalType, double, double) : void, private doTest(MultivariateRealFunction, double[], double[], GoalType, double, double, double) : void
58f407fc8a3329bd2d38451ad4c992dc71441097, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, private localMin(UnivariateRealFunction, GoalType, double, double, double, double) : double, private localMin(UnivariateRealFunction, GoalType, double, double, double, double, double) : double
9e9048ccb582546ba54a5e92c3ab97d508884858, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, public OpenMapRealVector(int, int, double) : void, public OpenMapRealVector(int, int, double, double) : void
9e9048ccb582546ba54a5e92c3ab97d508884858, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, public OpenMapRealVector(Double[], double) : void, public OpenMapRealVector(Double[], double, double) : void
9e9048ccb582546ba54a5e92c3ab97d508884858, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, public OpenMapRealVector(int, double) : void, public OpenMapRealVector(int, double, double) : void
6adb238e5a564c8d05508fd75c716aca73e7dfaf, src/java/org/apache/commons/math/ode/AbstractIntegrator.java, public eventOccurred(double, double[]) : int, public eventOccurred(double, double[], boolean) : int
6adb238e5a564c8d05508fd75c716aca73e7dfaf, src/java/org/apache/commons/math/ode/MultistepIntegrator.java, public eventOccurred(double, double[]) : int, public eventOccurred(double, double[], boolean) : int
6adb238e5a564c8d05508fd75c716aca73e7dfaf, src/java/org/apache/commons/math/ode/events/EventHandler.java, public eventOccurred(double, double[]) : int, public eventOccurred(double, double[], boolean) : int
0cb711643d1bb92c73d925ceb1975b60b3476e28, src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,  SimplexTableau(LinearObjectiveFunction, Collection, GoalType, boolean) : void,  SimplexTableau(LinearObjectiveFunction, Collection, GoalType, boolean, double) : void
c37f06ed3ad2de8d49a80ac46aae3ab7748598a4, src/test/org/apache/commons/math/optimization/general/MinpackTest.java, public checkTheoreticalMinParams() : boolean, public checkTheoreticalMinParams(VectorialPointValuePair) : boolean
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/Optimizer.java, public optimize(ObjectiveFunction, GoalType) : PointValuePair, public optimize(ObjectiveFunction, GoalType, double[]) : PointValuePair
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java, protected iterateSimplex() : void, protected iterateSimplex(Comparator) : void
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java, protected replaceWorstPoint(PointValuePair) : void, protected replaceWorstPoint(PointValuePair, Comparator) : void
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java, protected evaluateSimplex() : void, protected evaluateSimplex(Comparator) : void
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java, protected iterateSimplex() : void, protected iterateSimplex(Comparator) : void
4f206ca3ee00be1430dfccb3de1b90c51af31976, src/java/org/apache/commons/math/optimization/direct/NelderMead.java, protected iterateSimplex() : void, protected iterateSimplex(Comparator) : void
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(double[]) : double[], public solve(double[], SingularValueDecomposition) : double[]
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealMatrix) : RealMatrix, public solve(RealMatrix, QRDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public isNonSingular() : boolean, public isNonSingular(SingularValueDecomposition) : boolean
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealMatrix) : RealMatrix, public solve(RealMatrix, EigenDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealMatrix) : RealMatrix, public solve(RealMatrix, SingularValueDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealVector) : RealVector, public solve(RealVector, EigenDecomposition) : RealVector
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public getInverse() : RealMatrix, public getInverse(EigenDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealVector) : RealVector, public solve(RealVector, QRDecomposition) : RealVector
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealVector) : RealVector, public solve(RealVector, SingularValueDecomposition) : RealVector
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealVector) : RealVector, public solve(RealVector, LUDecomposition) : RealVector
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(double[]) : double[], public solve(double[], LUDecomposition) : double[]
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public getInverse() : RealMatrix, public getInverse(QRDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public getInverse() : RealMatrix, public getInverse(LUDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(double[]) : double[], public solve(double[], EigenDecomposition) : double[]
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public isNonSingular() : boolean, public isNonSingular(QRDecomposition) : boolean
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public isNonSingular() : boolean, public isNonSingular(EigenDecomposition) : boolean
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public getInverse() : RealMatrix, public getInverse(SingularValueDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public isNonSingular() : boolean, public isNonSingular(LUDecomposition) : boolean
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(RealMatrix) : RealMatrix, public solve(RealMatrix, LUDecomposition) : RealMatrix
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/DecompositionSolver.java, public solve(double[]) : double[], public solve(double[], QRDecomposition) : double[]
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, public EigenDecompositionImpl(double[], double[]) : void, public EigenDecompositionImpl(double[], double[], double) : void
2c36a666c7a9efdfab8490c12f76a98c28ebfb06, src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, public EigenDecompositionImpl(RealMatrix) : void, public EigenDecompositionImpl(RealMatrix, double) : void
9e8e88d91649762dbcc94c803e637d8f7c57cf3c, src/java/org/apache/commons/math/linear/InvalidMatrixException.java, public InvalidMatrixException(String) : void, public InvalidMatrixException(String, Object[]) : void
9e8e88d91649762dbcc94c803e637d8f7c57cf3c, src/java/org/apache/commons/math/linear/InvalidMatrixException.java, public InvalidMatrixException() : void, public InvalidMatrixException(Throwable) : void
9e8e88d91649762dbcc94c803e637d8f7c57cf3c, src/java/org/apache/commons/math/linear/MatrixIndexException.java, public MatrixIndexException(String) : void, public MatrixIndexException(String, Object[]) : void
e1306edb51b2b9ce1fcedda38eb797523ad36161, src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, protected filterStep(double, boolean) : double, protected filterStep(double, boolean, boolean) : double
ef90ce895600bc82fbb34f8389a9a373592e642d, src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, public VectorialCovariance(int) : void, public VectorialCovariance(int, boolean) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java, public addSwitchingFunction(SwitchingFunction, double, double) : void, public addSwitchingFunction(SwitchingFunction, double, double, int) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, public addSwitchingFunction(SwitchingFunction, double, double) : void, public addSwitchingFunction(SwitchingFunction, double, double, int) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java, public addSwitchingFunction(SwitchingFunction, double, double) : void, public addSwitchingFunction(SwitchingFunction, double, double, int) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java, public addSwitchingFunction(SwitchingFunction, double, double) : void, public addSwitchingFunction(SwitchingFunction, double, double, int) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/SwitchState.java, public SwitchState(SwitchingFunction, double, double) : void, public SwitchState(SwitchingFunction, double, double, int) : void
62e00938cb8cd67d6c6e510d5dddb0d303401b95, src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java, public add(SwitchingFunction, double, double) : void, public add(SwitchingFunction, double, double, int) : void
af62f7927fa28d27448b149767ce5480e4fb8a08, src/test/org/apache/commons/math/ode/TestProblemHandler.java, public TestProblemHandler(TestProblemAbstract) : void, public TestProblemHandler(TestProblemAbstract, FirstOrderIntegrator) : void
3884822ec4757baa3de11b8fa8c60be15b82a7fe, src/org/spaceroots/mantissa/optimization/PointCostPair.java, public PointCostPair(double[]) : void, public PointCostPair(double[], double) : void
3884822ec4757baa3de11b8fa8c60be15b82a7fe, tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java, public MyMeasurement(double, double) : void, public MyMeasurement(double, double, WeightedMeasurementTest) : void
cc73bfb42fa86c01e37a1b7021b1ab41e0f0cb63, src/mantissa/src/org/spaceroots/mantissa/optimization/PointCostPair.java, public PointCostPair(double[]) : void, public PointCostPair(double[], double) : void
cc73bfb42fa86c01e37a1b7021b1ab41e0f0cb63, src/mantissa/tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java, public MyMeasurement(double, double) : void, public MyMeasurement(double, double, WeightedMeasurementTest) : void
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public t(double[], double[]) : double, public t(double[], double[], boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public tTest(StatisticalSummary, StatisticalSummary) : double, public tTest(StatisticalSummary, StatisticalSummary, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public tTest(StatisticalSummary, StatisticalSummary, double) : boolean, public tTest(StatisticalSummary, StatisticalSummary, double, boolean) : boolean
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public t(StatisticalSummary, StatisticalSummary) : double, public t(StatisticalSummary, StatisticalSummary, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public tTest(double[], double[]) : double, public tTest(double[], double[], boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTest.java, public tTest(double[], double[], double) : boolean, public tTest(double[], double[], double, boolean) : boolean
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public t(double[], double[]) : double, public t(double[], double[], boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, protected t(double, double, double, double, double, double) : double, protected t(double, double, double, double, double, double, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, protected tTest(double, double, double, double, double, double) : double, protected tTest(double, double, double, double, double, double, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public t(StatisticalSummary, StatisticalSummary) : double, public t(StatisticalSummary, StatisticalSummary, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public tTest(StatisticalSummary, StatisticalSummary) : double, public tTest(StatisticalSummary, StatisticalSummary, boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public tTest(StatisticalSummary, StatisticalSummary, double) : boolean, public tTest(StatisticalSummary, StatisticalSummary, double, boolean) : boolean
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public tTest(double[], double[]) : double, public tTest(double[], double[], boolean) : double
73d8935012ba2726fba44b4458f469584c2c889b, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, public tTest(double[], double[], double) : boolean, public tTest(double[], double[], double, boolean) : boolean
1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb, src/test/org/apache/commons/math/stat/CertifiedDataTest.java, private loadStats(String) : void, private loadStats(String, Object) : void
c9250274d174b4dabcbcb1db374d0978bb23cf8a, org/apache/commons/math/linear/Decomposer.java, public decompose() : Decomposition, public decompose(RealMatrix) : Decomposition
04094833d5f1368927d1a768c7a4349680c55eda, src/experimental/org/apache/commons/math/linear/Decomposer.java, public decompose() : Decomposition, public decompose(RealMatrix) : Decomposition
